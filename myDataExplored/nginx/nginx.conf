# Number of worker processes (auto lets Nginx decide based on CPU)
worker_processes auto;

# Maximum number of simultaneous connections
events {
    worker_connections 1024;
}

# HTTP server configuration
http {
    # Define upstream backend service
    upstream backend {
        server backend:5000; # Backend service running on port 5000
    }

    # Define upstream frontend service
    upstream frontend {
        server frontend:80; # Frontend service served by Nginx container
    }

    # Default server configuration
    server {
        listen 80; # Listen on port 80 for HTTP requests

        # Route API calls to the backend service
        location /api/ {
            proxy_pass http://backend; # Forward API calls to the backend
            proxy_http_version 1.1; # Use HTTP/1.1 for connection reuse
            proxy_set_header Upgrade $http_upgrade; # Support WebSocket upgrades
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host; # Preserve the Host header
            proxy_cache_bypass $http_upgrade; # Prevent caching for WebSocket connections
        }

        # Serve static files for the frontend
        location / {
            proxy_pass http://frontend; # Forward all other requests to the frontend
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Optional: Add error page handling
        error_page 404 /404.html;
        location = /404.html {
            root /usr/share/nginx/html; # Serve a custom 404 page from the frontend
        }
    }
}
